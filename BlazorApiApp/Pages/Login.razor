@page "/login"
@using Blazored.LocalStorage;
@using WebTestApi.User
@using BlazorApiApp.Services;

@inject IAuthService AuthService;
@inject NavigationManager NavigationManager;
@attribute [AllowAnonymous]


<div class="card">
	<div class="card-body">
		<div class="card-title">Login</div>
		<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
			<DataAnnotationsValidator></DataAnnotationsValidator>
			<ValidationSummary></ValidationSummary>

			<div class="form-group">
				<label for="username">Username</label>
				<InputText id="username"	 class="form-control" @bind-Value="loginModel.Email"></InputText>
				<ValidationMessage For="()=> loginModel.Email "></ValidationMessage>
			</div>

			<div class="form-group">
				<label for="password">Password</label>
				<InputText type="password" id="password" class="form-control" @bind-Value="loginModel.Password"></InputText> 
				<ValidationMessage For="()=> loginModel.Password"></ValidationMessage>
			</div>
			<button type="submit" class="btn btn-success">Login</button>

		</EditForm>
	</div>

</div>

@code{
	private bool showError;
	private string error="";
	private LoginViewModel loginModel = new LoginViewModel();

	private async Task HandleLogin()
	{
		showError = false;
		var result = await AuthService.Login(loginModel);
		if (result.IsSuccess)
		{
			NavigationManager.NavigateTo("/students");
		}
		else
			{
			showError = true;
			error = result.Errors;
		}


		
	}
}
